import cv2
import numpy as np
import os
import re


def crop_polygon_with_alpha(img, coordinates):
    mask = np.zeros(img.shape[:2], dtype=np.uint8)
    cv2.fillPoly(mask, [np.array(coordinates)], 255)
    alpha_img = np.dstack([img, mask])
    return alpha_img


def extract_number(filename):
    match = re.search(r'(\d+)', filename)
    if match:
        return int(match.group(1))
    return 0


# 指定文件夹路径
folder1 = 'C:\\Users\\flychen\\Desktop\\video_9'
folder2 = 'C:\\Users\\flychen\\Desktop\\09'
output_folder = 'C:\\Users\\flychen\\Desktop\\08_mask'

if not os.path.exists(output_folder):
    os.makedirs(output_folder)

folder1_images = sorted([f for f in os.listdir(folder1) if f.endswith('.png')], key=extract_number)
folder2_images = sorted([f for f in os.listdir(folder2) if f.endswith('.png')], key=extract_number)

# 定义六边形的坐标
coordinates = [
    (0, 300),
    (0, 370),
    (1226, 370),
    (1226, 287),
    (830, 287),
    (401, 294)
]

cycle_length = 287
cycle_images = folder1_images[:cycle_length]

for idx, img2_name in enumerate(folder2_images):
    # 根据当前的index来选择用于粘贴的图片
    img1_name = cycle_images[idx % cycle_length]

    img1_path = os.path.join(folder1, img1_name)
    img2_path = os.path.join(folder2, img2_name)

    # 使用OpenCV读取图像
    img1 = cv2.imread(img1_path)
    img2 = cv2.imread(img2_path)

    # 使用6个点裁剪图片并获得透明度图像
    alpha_cropped = crop_polygon_with_alpha(img1, coordinates)

    # 对于具有透明度通道的图像，我们可以直接叠加
    for c in range(0, 3):
        img2[:, :, c] = img2[:, :, c] * (1 - alpha_cropped[:, :, 3] / 255.0) + alpha_cropped[:, :, c] * (
                    alpha_cropped[:, :, 3] / 255.0)

    # 保存图像到输出文件夹
    cv2.imwrite(os.path.join(output_folder, img2_name), img2)
    print(f"Processed {img2_name} using {img1_name}")

print("处理完成！")
